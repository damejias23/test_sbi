/*
Nudm_EE

Nudm Event Exposure Service.   Â© 2023, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package udmclient

import (
	"encoding/json"
)

// EeMonitoringRevoked struct for EeMonitoringRevoked
type EeMonitoringRevoked struct {
	// A map (list of key-value pairs where ReferenceId serves as key) of MonitoringEvents
	RevokedMonitoringEventList map[string]MonitoringEvent `json:"revokedMonitoringEventList"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	RemovedGpsi *string `json:"removedGpsi,omitempty"`
	ExcludeGpsiList []string `json:"excludeGpsiList,omitempty"`
}

// NewEeMonitoringRevoked instantiates a new EeMonitoringRevoked object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEeMonitoringRevoked(revokedMonitoringEventList map[string]MonitoringEvent) *EeMonitoringRevoked {
	this := EeMonitoringRevoked{}
	this.RevokedMonitoringEventList = revokedMonitoringEventList
	return &this
}

// NewEeMonitoringRevokedWithDefaults instantiates a new EeMonitoringRevoked object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEeMonitoringRevokedWithDefaults() *EeMonitoringRevoked {
	this := EeMonitoringRevoked{}
	return &this
}

// GetRevokedMonitoringEventList returns the RevokedMonitoringEventList field value
func (o *EeMonitoringRevoked) GetRevokedMonitoringEventList() map[string]MonitoringEvent {
	if o == nil {
		var ret map[string]MonitoringEvent
		return ret
	}

	return o.RevokedMonitoringEventList
}

// GetRevokedMonitoringEventListOk returns a tuple with the RevokedMonitoringEventList field value
// and a boolean to check if the value has been set.
func (o *EeMonitoringRevoked) GetRevokedMonitoringEventListOk() (*map[string]MonitoringEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevokedMonitoringEventList, true
}

// SetRevokedMonitoringEventList sets field value
func (o *EeMonitoringRevoked) SetRevokedMonitoringEventList(v map[string]MonitoringEvent) {
	o.RevokedMonitoringEventList = v
}

// GetRemovedGpsi returns the RemovedGpsi field value if set, zero value otherwise.
func (o *EeMonitoringRevoked) GetRemovedGpsi() string {
	if o == nil || o.RemovedGpsi == nil {
		var ret string
		return ret
	}
	return *o.RemovedGpsi
}

// GetRemovedGpsiOk returns a tuple with the RemovedGpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EeMonitoringRevoked) GetRemovedGpsiOk() (*string, bool) {
	if o == nil || o.RemovedGpsi == nil {
		return nil, false
	}
	return o.RemovedGpsi, true
}

// HasRemovedGpsi returns a boolean if a field has been set.
func (o *EeMonitoringRevoked) HasRemovedGpsi() bool {
	if o != nil && o.RemovedGpsi != nil {
		return true
	}

	return false
}

// SetRemovedGpsi gets a reference to the given string and assigns it to the RemovedGpsi field.
func (o *EeMonitoringRevoked) SetRemovedGpsi(v string) {
	o.RemovedGpsi = &v
}

// GetExcludeGpsiList returns the ExcludeGpsiList field value if set, zero value otherwise.
func (o *EeMonitoringRevoked) GetExcludeGpsiList() []string {
	if o == nil || o.ExcludeGpsiList == nil {
		var ret []string
		return ret
	}
	return o.ExcludeGpsiList
}

// GetExcludeGpsiListOk returns a tuple with the ExcludeGpsiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EeMonitoringRevoked) GetExcludeGpsiListOk() ([]string, bool) {
	if o == nil || o.ExcludeGpsiList == nil {
		return nil, false
	}
	return o.ExcludeGpsiList, true
}

// HasExcludeGpsiList returns a boolean if a field has been set.
func (o *EeMonitoringRevoked) HasExcludeGpsiList() bool {
	if o != nil && o.ExcludeGpsiList != nil {
		return true
	}

	return false
}

// SetExcludeGpsiList gets a reference to the given []string and assigns it to the ExcludeGpsiList field.
func (o *EeMonitoringRevoked) SetExcludeGpsiList(v []string) {
	o.ExcludeGpsiList = v
}

func (o EeMonitoringRevoked) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["revokedMonitoringEventList"] = o.RevokedMonitoringEventList
	}
	if o.RemovedGpsi != nil {
		toSerialize["removedGpsi"] = o.RemovedGpsi
	}
	if o.ExcludeGpsiList != nil {
		toSerialize["excludeGpsiList"] = o.ExcludeGpsiList
	}
	return json.Marshal(toSerialize)
}

type NullableEeMonitoringRevoked struct {
	value *EeMonitoringRevoked
	isSet bool
}

func (v NullableEeMonitoringRevoked) Get() *EeMonitoringRevoked {
	return v.value
}

func (v *NullableEeMonitoringRevoked) Set(val *EeMonitoringRevoked) {
	v.value = val
	v.isSet = true
}

func (v NullableEeMonitoringRevoked) IsSet() bool {
	return v.isSet
}

func (v *NullableEeMonitoringRevoked) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEeMonitoringRevoked(val *EeMonitoringRevoked) *NullableEeMonitoringRevoked {
	return &NullableEeMonitoringRevoked{value: val, isSet: true}
}

func (v NullableEeMonitoringRevoked) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEeMonitoringRevoked) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


